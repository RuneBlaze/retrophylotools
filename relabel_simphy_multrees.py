import argparse
import dendropy


def relabel_simphy_multrees(ifil, ofil):
    """
    Relabels leaves of locus or gene trees generated by SimPhy; specifically,
    [sid]_[lid]_[gid] is relabled to [sid]. Also, removes internal node labels
    and branch lengths.

    Parameters
    ----------
    ifil : string
           name of input file (one newick string per line)
    ofil : string
           name of output file (one newick string per line)
    """
    ostr = ""

    with open(ifil, "r") as f:
        for line in f.readlines():
            temp = "".join(line.split())
            tree = dendropy.Tree.get(
                data=temp, schema="newick", rooting="force-unrooted"
            )

            for node in tree.postorder_node_iter():
                # Remove edge lengths
                node.edge.length = None

                if node.is_leaf():
                    # Change leaf label
                    node.taxon.label = node.taxon.label.split(" ")[0]
                else:
                    # Remove internal node label
                    node.label = None

            ostr += tree.as_string(schema="newick")[5:]

    with open(ofil, "w") as f:
        f.write(ostr)


def main(args):
    base = args.input.rsplit(".", 1)
    prefix = base[0]
    suffix = base[1]
    output = base[0] + "-mult." + base[1]
    relabel_simphy_multrees(args.input, output)


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument("-i", "--input", type=str, help="Input file", required=True)

    main(parser.parse_args())
